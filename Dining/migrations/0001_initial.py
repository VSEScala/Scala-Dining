# Generated by Django 2.1.2 on 2018-10-16 15:36

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DiningComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DiningCommentViews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiningEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_shopped', models.BooleanField(default=False)),
                ('has_cooked', models.BooleanField(default=False)),
                ('has_cleaned', models.BooleanField(default=False)),
                ('has_paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DiningEntryExternal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('has_paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DiningList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('sign_up_deadline', models.DateTimeField(blank=True, help_text='Date/time before users need to sign up', null=True)),
                ('name', models.SlugField(blank=True, db_index=False, default='', max_length=30, null=True)),
                ('dish', models.CharField(blank=True, default='', help_text='The dish made', max_length=30)),
                ('days_adjustable', models.IntegerField(default=2, help_text='The amount of days after occurance that one can add/remove users etc')),
                ('limit_signups_to_association_only', models.BooleanField(default=False, help_text='Whether only members of the given association can sign up')),
                ('kitchen_cost', models.DecimalField(decimal_places=2, default=0.5, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='kitchen cost per person')),
                ('dinner_cost_total', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='total dinner costs')),
                ('dinner_cost_single', models.DecimalField(blank=True, decimal_places=2, default=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='dinner cost per person')),
                ('dinner_cost_keep_single_constant', models.BooleanField(default=False, verbose_name='Define costs from single price')),
                ('auto_pay', models.BooleanField(default=False)),
                ('diners', models.IntegerField(default=0)),
                ('min_diners', models.IntegerField(default=4)),
                ('max_diners', models.IntegerField(default=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserDiningSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergies', models.CharField(blank=True, default='', help_text='Max 100 characters, leave empty if no allergies', max_length=100)),
                ('canSubscribeDiningList', models.BooleanField(default=True, verbose_name='Can subscribe to dining lists')),
                ('canClaimDiningList', models.BooleanField(default=True, verbose_name='Can claim dining lists')),
            ],
        ),
        migrations.CreateModel(
            name='UserDiningStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_subscribed', models.IntegerField(default=0)),
                ('count_shopped', models.IntegerField(default=0)),
                ('count_cooked', models.IntegerField(default=0)),
                ('count_cleaned', models.IntegerField(default=0)),
            ],
        ),
    ]
